/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.ControleArena;
import Model.Criaturas.Escolha;
import Model.Itens.ItemBase;
import java.awt.FlowLayout;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JPanel;
import javax.swing.SwingConstants;
import javax.swing.WindowConstants;

/**
 * Usado para navegar entre opções de itens
 * @author Paulo
 */
public class SeletorDeItem extends javax.swing.JFrame {
    /**
     * Referencia ao controler para comunicacao
     */
    private ControleArena controle;
    
    /**
     * Aponta para o item que esta sendo exibido do array
     */
    private int ponteiro =0;
    
    /**
     * Itens que podem ser exibidos
     */
    private List<ItemBase> itens;
    
    /**
     * Item sendo exibido
     */
    private CartaItens itemExibido;
    
    /**
     * Creates new form SeletorDeItem
     */
    public SeletorDeItem(List<ItemBase> itens,ControleArena controle) {
        initComponents();
        this.itens = itens;
        this.controle = controle;
        pItem.setLayout(new FlowLayout(SwingConstants.LEADING,0,0));
        if (itens.size()>0)
        {
            CartaItens pCartaItem = new CartaItens(itens.get(ponteiro),controle,true);
            pItem.add(pCartaItem);
            itemExibido = pCartaItem;
        }
        validarBotoes();
        setDefaultCloseOperation(javax.swing.JFrame.DO_NOTHING_ON_CLOSE);
        ViewGlobal.centralizarJanela(this);
        this.setVisible(true);
    }
    
    /**
     * Atualiza exibicao de item
     */
    private void update()
    {
        validarBotoes();
        itemExibido.update(itens.get(ponteiro));
    }
    
    /**
     * Valida se deve desativar botoes esquerda e direita
     */
    private void validarBotoes()
    {
        if (ponteiro == 0)
        {
            btEsquerda.setEnabled(false);
        }
        else
        {
            btEsquerda.setEnabled(true);
        }
        if (ponteiro >= itens.size()-1)
        {
            btDireita.setEnabled(false);
        }
        else
        {
            btDireita.setEnabled(true);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pItem = new javax.swing.JPanel();
        btEsquerda = new javax.swing.JButton();
        btDireita = new javax.swing.JButton();
        btCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pItem.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout pItemLayout = new javax.swing.GroupLayout(pItem);
        pItem.setLayout(pItemLayout);
        pItemLayout.setHorizontalGroup(
            pItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 164, Short.MAX_VALUE)
        );
        pItemLayout.setVerticalGroup(
            pItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 369, Short.MAX_VALUE)
        );

        btEsquerda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/Imagens/arrow_de_item_esquerda.png"))); // NOI18N
        btEsquerda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEsquerdaActionPerformed(evt);
            }
        });

        btDireita.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/Imagens/arrow_de_item_direita.png"))); // NOI18N
        btDireita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDireitaActionPerformed(evt);
            }
        });

        btCancelar.setText("Cancelar");
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(btEsquerda, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btDireita, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(btCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btEsquerda, javax.swing.GroupLayout.DEFAULT_SIZE, 384, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btDireita)
                            .addComponent(pItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(11, 11, 11)
                .addComponent(btCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btEsquerdaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEsquerdaActionPerformed
        // TODO add your handling code here:
        ponteiro--;
        update();
    }//GEN-LAST:event_btEsquerdaActionPerformed

    private void btDireitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDireitaActionPerformed
        // TODO add your handling code here:
        ponteiro++;
        update();
    }//GEN-LAST:event_btDireitaActionPerformed

    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        // TODO add your handling code here:
        this.dispose();
        controle.frame_a_exibir = FrameExibido.ESCOLHER_UM_HEROI;
        controle.escolha = Escolha.INDICE_ESCOLHIDO;
        controle.criarProximoFrame();
    }//GEN-LAST:event_btCancelarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SeletorDeItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SeletorDeItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SeletorDeItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SeletorDeItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                List< ItemBase > array = new ArrayList<>();
                ItemBase item1 = Model.Geradores.GeradorItem.generateStatusIncreasePotion(1);
                ItemBase item2 = Model.Geradores.GeradorItem.gerarArmaArmadura(2);
                array.add(item1);
                array.add(item2);
                new SeletorDeItem(array,null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btDireita;
    private javax.swing.JButton btEsquerda;
    private javax.swing.JPanel pItem;
    // End of variables declaration//GEN-END:variables
}
