/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Model.Efeitos.Efeito;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.MouseInfo;
import java.awt.Point;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JTextArea;

/**
 *
 * @author FREE
 */
public class PanelEfeitos extends javax.swing.JPanel {
    Efeito efeito;
    
    JFrame frame_temporario = null;
    JTextArea taInformacao = null;
    
    private boolean disabled = false;

    public PanelEfeitos(Efeito efeito,boolean should_disable) {
        disabled = should_disable;
        initComponents();
        this.efeito = efeito;
        this.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                mouseEntrou(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                mouseSaiu(evt);
            }
        });
        if (efeito != null)
        {
            try {
                lbImagem.setIcon( new ImageIcon( ImageIO.read( efeito.getArquivoDeImagem() ) ) );
            } catch (IOException ex) {
                Logger.getLogger(PanelEfeitos.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else
        {
            disabled = true;
            try {
                lbImagem.setIcon( new ImageIcon( ImageIO.read( new File(getClass().getResource("/View/Imagens/efeito_nulo_icon.png").getFile() ) ) ) );
            } catch (IOException ex) {
                Logger.getLogger(PanelEfeitos.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        lbImagem.setPreferredSize(new Dimension(80,80));
        this.add(lbImagem);
        this.setPreferredSize(new Dimension(80,80));
    }
    
    public void update(Efeito efeito)
    {
        this.efeito = efeito;
        if (efeito != null)
        {
            //System.out.println("update Efeito nao nulo!");
            try {
                lbImagem.setIcon( new ImageIcon( ImageIO.read( efeito.getArquivoDeImagem() ) ) );
            } catch (IOException ex) {
                Logger.getLogger(PanelEfeitos.class.getName()).log(Level.SEVERE, null, ex);
            }
            disabled = false;
        }
        else
        {
            disabled = true;
            try {
                lbImagem.setIcon( new ImageIcon( ImageIO.read( new File(getClass().getResource("/View/Imagens/efeito_nulo_icon.png").getFile() ) ) ) );
            } catch (IOException ex) {
                Logger.getLogger(PanelEfeitos.class.getName()).log(Level.SEVERE, null, ex);
            }
            //System.out.println("update Efeito nulo!");
        }
    }
    
    public void setDisabled()
    {
        disabled = true;
    }
    
    public void setEnabled()
    {
        disabled = false;
    }

    private void mouseEntrou(java.awt.event.MouseEvent evt)
    {
        if (!disabled)
        {
            Point location = MouseInfo.getPointerInfo().getLocation(); 
            location.setLocation(location.x + 20, location.y + 10);
            taInformacao = new JTextArea(efeito.getDescricao());
            System.out.println("descricao = " + efeito.getDescricao());
            taInformacao.setEditable(false);
            frame_temporario = new JFrame();
            frame_temporario.add(taInformacao);
            frame_temporario.pack();
            frame_temporario.setLocation(location);
            frame_temporario.setVisible(true);
        }
    }
    
    private void mouseSaiu(java.awt.event.MouseEvent evt)
    {
        if (frame_temporario!=null)
        {
            frame_temporario.dispose();
        }
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbImagem = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(80, 80));

        lbImagem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/Imagens/ataque_aumentado_icon.png"))); // NOI18N
        lbImagem.setText("jLabel1");
        lbImagem.setPreferredSize(new java.awt.Dimension(80, 80));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lbImagem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lbImagem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lbImagem;
    // End of variables declaration//GEN-END:variables
}
